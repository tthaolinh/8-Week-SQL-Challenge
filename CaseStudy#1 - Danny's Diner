CREATE SCHEMA dannys_diner;
SET search_path = dannys_diner;

CREATE TABLE sales (
  "customer_id" VARCHAR(1),
  "order_date" DATE,
  "product_id" INTEGER
);

INSERT INTO sales
  ("customer_id", "order_date", "product_id")
VALUES
  ('A', '2021-01-01', '1'),
  ('A', '2021-01-01', '2'),
  ('A', '2021-01-07', '2'),
  ('A', '2021-01-10', '3'),
  ('A', '2021-01-11', '3'),
  ('A', '2021-01-11', '3'),
  ('B', '2021-01-01', '2'),
  ('B', '2021-01-02', '2'),
  ('B', '2021-01-04', '1'),
  ('B', '2021-01-11', '1'),
  ('B', '2021-01-16', '3'),
  ('B', '2021-02-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-07', '3');
 

CREATE TABLE menu (
  "product_id" INTEGER,
  "product_name" VARCHAR(5),
  "price" INTEGER
);

INSERT INTO menu
  ("product_id", "product_name", "price")
VALUES
  ('1', 'sushi', '10'),
  ('2', 'curry', '15'),
  ('3', 'ramen', '12');
  

CREATE TABLE members (
  "customer_id" VARCHAR(1),
  "join_date" DATE
);

INSERT INTO members
  ("customer_id", "join_date")
VALUES
  ('A', '2021-01-07'),
  ('B', '2021-01-09');
  
 /* --------------------
   Case Study Questions
   --------------------*/

-- 1. What is the total amount each customer spent at the restaurant?
  SELECT s.customer_id,
  SUM(m.price) AS total_spent
  FROM
  dannys_diner.sales AS s
  INNER JOIN dannys_diner.menu AS m 
  ON s.product_id = m.product_id
  GROUP BY
  customer_id
ORDER BY
  customer_id;
-- 2. How many days has each customer visited the restaurant?
  SELECT customer_id, COUNT(DISTINCT(order_date)) AS number_of_visit_days
  FROM dannys_diner.sales
  GROUP BY customer_id
  ORDER BY customer_id;
-- 3. What was the first item from the menu purchased by each customer?
  WITH cte AS(
  SELECT
    DISTINCT customer_id,
    m.product_name,
    DENSE_RANK() OVER(
      PARTITION BY s.customer_id
      ORDER BY s.order_date
    ) AS rank
  FROM
    dannys_diner.sales AS s
    INNER JOIN dannys_diner.menu AS m 
    ON s.product_id = m.product_id
)
SELECT
  customer_id,
  product_name
FROM
  cte
WHERE
  rank = 1
ORDER BY
  customer_id,
  product_name;
-- 4. What is the most purchased item on the menu and how many times was it purchased by all customers?
    SELECT m.product_name, COUNT(m.product_id) AS frequency
    FROM dannys_diner.sales AS s
    INNER JOIN dannys_diner.menu AS m
    ON s.product_id = m.product_id
    GROUP BY m.product_name
    ORDER BY frequency DESC
    LIMIT 1;
-- 5. Which item was the most popular for each customer?
  WITH cte AS(
  SELECT s.customer_id,
    m.product_name,
    COUNT(m.product_id) AS frequency,
    DENSE_RANK() OVER(
      PARTITION BY 
	      s.customer_id
      ORDER BY
        COUNT(m.product_id) DESC
    ) as rank
  FROM
    dannys_diner.sales AS s
    INNER JOIN dannys_diner.menu AS m 
    ON s.product_id = m.product_id
  GROUP BY
    customer_id,
    product_name
)

SELECT
  customer_id,
  product_name,
  frequency 
FROM
  cte
WHERE 
  rank = 1
ORDER BY
  customer_id,
  product_name;

-- 6. Which item was purchased first by the customer after they became a member?
   WITH CTE AS(
    s.customer_id,
    m.product_name,
    
-- 7. Which item was purchased just before the customer became a member?
-- 8. What is the total items and amount spent for each member before they became a member?
-- 9.  If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?
-- 10. In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at the end of January?

-- Example Query:
SELECT
  	product_id,
    product_name,
    price
FROM dannys_diner.menu
ORDER BY price DESC
LIMIT 5;
